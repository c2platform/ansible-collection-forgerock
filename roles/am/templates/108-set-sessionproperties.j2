{{ ansible_managed|comment(decoration="// ") }}
{{ item|c2platform.forgerock.amster_script_header|comment(decoration="// ") }}
:load 101-connect_To_AM.amster
:load 102-set-common-functions.amster
try {
{{ lookup('template', './params.groovy.j2')|indent(2, True) }}
    println ("108-set-custom-session-properties")
    println ("Set the whitelist first")
    BODY="""{"sessionPropertyWhitelist":["am.protected.uidIdentifier","am.protected.dnIdentifier","am.protected.roleIdentifier"]}"""

    spwl_cur=eval("read SessionPropertyWhiteList --realm $realmName")
    if(isNull(spwl_cur)){
      if(isNull(eval("create SessionPropertyWhiteList --realm $realmName --body '$BODY'"))) {
        println red("{{ am_amster_stdout_tags['error'] }} creating SessionPropertyWhiteList in realm $realmName");
      } else {
        println green("{{ am_amster_stdout_tags['changed'] }} SessionPropertyWhiteList in realm $realmName created");
      }
    } else {
      if(isNull(eval("update SessionPropertyWhiteList --realm $realmName --body '$BODY'"))) {
        println red("{{ am_amster_stdout_tags['error'] }} updating SessionPropertyWhiteList in realm $realmName");
      } else {
        println green("Updating SessionPropertyWhiteList in realm $realmName");
      }
    }
   spwl_new=eval("read SessionPropertyWhiteList --realm $realmName")
    //=================================

    println ("Now add the custom session properties to the realm authentication settings")

    BODY="""{
    	"security" : {
          "moduleBasedAuthEnabled" : false,
          "zeroPageLoginAllowedWithoutReferrer" : false,
          "sharedSecret" : "$sharedSecret",
          "keyAlias" : "$keyAlias",
          "zeroPageLoginEnabled" : false,
          "zeroPageLoginReferrerWhiteList" : [ ]
          },
          "postauthprocess" : {
          "usernameGeneratorClass" : "com.sun.identity.authentication.spi.DefaultUserIDGenerator",
          "loginFailureUrl" : [  ],
          "userAttributeSessionMapping" : [ "uid|uidIdentifier", "dn|dnIdentifier", "businessCategory|roleIdentifier" ],
          "loginPostProcessClass" : [ ],
          "usernameGeneratorEnabled" : true,
          "loginSuccessUrl" : [ "$loginSuccessUrl" ]
        }
    }"""

    auth_cur=eval("read Authentication --realm $realmName")
    if(isNull(eval("update Authentication --realm $realmName --body '$BODY'"))) {
      println red("{{ am_amster_stdout_tags['error'] }} updating authentication settings in realm $realmName")
    } else {
      println green("Authentication settings in realm $realmName submitted")
    }
    auth_new=eval("read Authentication --realm $realmName")
    if (resourceChange(auth_cur,auth_new)) {
      println green("{{ am_amster_stdout_tags['changed'] }} Authentication settings in realm $realmName updated")
    }
    if (resourceChange(spwl_cur,spwl_new)) {
      println green("{{ am_amster_stdout_tags['changed'] }} SessionPropertyWhiteList settings in realm $realmName updated")
    }


} catch(Exception e) {
   println("{{ am_amster_stdout_tags['error'] }} ${e.getMessage()} ")
}
:quit


//##ERROR## Cannot get property '_rev' on null object
