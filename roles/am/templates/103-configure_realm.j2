// {{ ansible_managed }}
connect {{ amster_am_connect|c2platform.forgerock.ds_cmd }} {{ amster_am_install['serverUrl'] }}

{{ am_amster_common_functions }}

println("Parameters")
println("=========================================================" )
realmName = System.getenv("name")
realmFQDN = System.getenv("fqdn")
realmAliases = System.getenv("aliases")
params = ['realmName':realmName,'fqdn':realmFQDN]

try {
  {{ am_amster_params_check }}
  println("Create realm")
  println("=========================================================")
  cur = eval("read Realms --global --id '${("/" + realmName).bytes.encodeBase64().toString()}'")
  if (isNull(cur)) {
    if (isNull( eval ("create Realms --global --id '$realmName' --body '{\"name\":\"$realmName\",\"active\":true,\"parentPath\":\"/\",\"aliases\":$realmAliases}'")) ){
      println("{{ am_amster_stdout_tags['error'] }} - Error creating realm $realmName")
    } else {
      println("{{ am_amster_stdout_tags['changed'] }} Created realm $realmName")
    }
  } else{
    slurped = new groovy.json.JsonSlurper().parseText(cur)
    if (!( slurped.name.equals(realmName) &&
           slurped.aliases.size() == 1 &&
           slurped.aliases.equals(Eval.me(realmAliases)) &&
           slurped.parentPath.equals("/") &&
           slurped.active == true
   )){
      if (isNull(eval ("update Realms --global --id '${("/" + realmName).bytes.encodeBase64().toString()}' --body '{\"name\":\"$realmName\",\"active\":true,\"parentPath\":\"/\",\"aliases\":$realmAliases}'"))) {println("updating Realm config failed")} else { print("Updated realm $realmName")}
    } else {
      println blue("no delta, skipping realm creation/update")
    }
  }
} catch(Exception e) {
   println("{{ am_amster_stdout_tags['error'] }} ${e.getMessage()} ")
}
:quit
