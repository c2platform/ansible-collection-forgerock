---
- set_fact:
    am_git_config:
      dir:  "{{ am_git_config_parent_dir }}/am-git-config-{{ am_git_config['repo']|hash('sha1') }}"

- set_fact:
    am_git_config_clone_delegate: localhost
  when: am_git_config_control_node

# Note: default(omit) does not work on delegate_to so
# as a workaround we just have two "Git checkout" blocks
- block:
  - name: Git checkout ( delegated )
    ansible.builtin.git:
      repo: "{{ am_git_config['repo'] }}"
      dest: "{{ am_git_config['dir'] }}"
      version: "{{ am_git_config['version']|default(omit) }}"
      force: yes
    delegate_to: "{{ am_git_config_clone_delegate }}"
    when: not am_git_config_script is defined
    register: todo

  # Ansible Git module does support config
  - name: Git checkout ( delegated and custom )
    shell: "{{ am_git_config_script }}"
    delegate_to: "{{ am_git_config_clone_delegate }}"
    when: am_git_config_script is defined
    register: todo

  - name: Git folders ( delegated )
    synchronize:
      src: "{{ am_git_config['dir'] }}/{{ item['source'] }}"
      dest: "{{ item['dest'] }}"
      recursive: "{{ item['recursive']|default(True) }}"
      delete: "{{ item['delete']|default(True) }}"
      rsync_opts: "{{ item['rsync_opts']|default(omit) }}"
    with_items: "{{ am_git_folders }}"
    when: am_git_folders is defined
    notify: "{{ item['notify']|default(omit) }}"
    ignore_errors: "{{ item['ignore_errors']|default(False) }}"
  when: am_git_config_control_node

- block:
  - name: Git checkout
    ansible.builtin.git:
      repo: "{{ am_git_config['repo'] }}"
      dest: "{{ am_git_config['dir'] }}"
      version: "{{ am_git_config['version']|default(omit) }}"
      force: yes
    when: not am_git_config_script is defined

  - name: Git checkout ( custom )
    shell: "{{ am_git_config_script }}"
    when: am_git_config_script is defined

  - name: Git folders
    synchronize:
      src: "{{ am_git_config['dir'] }}/{{ item['source'] }}"
      dest: "{{ item['dest'] }}"
      recursive: "{{ item['recursive']|default(True) }}"
      delete: "{{ item['delete']|default(True) }}"
      rsync_opts: "{{ item['rsync_opts']|default(omit) }}"
    delegate_to: "{{ inventory_hostname }}"
    with_items: "{{ am_git_folders }}"
    when: am_git_folders is defined
    notify: "{{ item['notify']|default(omit) }}"
  when: not am_git_config_control_node

- name: Git files
  ansible.builtin.copy:
    src: "{{ am_git_config['dir'] }}/{{ item['source'] }}"
    dest: "{{ item['dest'] }}"
    owner: "{{ amster_owner }}"
    group: "{{ amster_group }}"
    remote_src: "{{ not am_git_config_control_node }}"
  with_items: "{{ am_git_files }}"
  when: am_git_files is defined
  notify: "{{ item['notify']|default(omit) }}"
