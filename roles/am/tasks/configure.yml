---
- name: Various JSON files
  copy:
    dest: "{{ item['dest'] }}"
    content: "{{ item['content']|to_nice_json }}"
    owner: "{{ am_owner }}"
    group: "{{ am_group }}"
    mode: 0644
  with_items: "{{ am_config_files }}"
  when: am_config_files|default(False)
  no_log: "{{ am_no_log }}"

- name: Various "raw" files
  copy:
    dest: "{{ item['dest'] }}"
    content: "{{ item['content'] }}"
    owner: "{{ am_owner }}"
    group: "{{ am_group }}"
    mode: "{{ item['mode']|default('0644') }}"
  with_items: "{{ am_config_files_raw }}"
  when: am_config_files_raw|default(False)
  notify: "{{ item['notify']|default(omit) }}"
  no_log: "{{ am_no_log }}"

- name: Prepare Amster scripts facts
  c2platform.forgerock.amster_script_prepare:
    dest: "{{ amster_home_version }}"
    configure: "{{ am_configure }}"
    templates: "{{ am_amster_templates }}"

- name: Remove obsolete Amster scripts
  file:
    path: "{{ amster_scripts_dir }}/{{ item }}"
    state: absent
  with_items: "{{ am_configure|selectattr('script-obsolete', 'defined')|map(attribute='script-obsolete')|list }}"

- name: Create Amster scripts
  template:
    src: "{{ item['template'] }}.j2"
    dest: "{{ amster_scripts_dir }}/{{ item['script'] }}"
    owner: "{{ am_owner }}"
    group: "{{ am_group }}"
    mode: 0600
  with_items: "{{ am_configure}}"
  no_log: "{{ am_no_log }}"
  register: _amster_scripts

- copy: # debug
    content: "{{ {'_amster_scripts': _amster_scripts }|to_nice_yaml }}"
    dest: /vagrant/_amster_scripts.yml

- name: Prepare Amster scripts execution
  c2platform.forgerock.amster_script_prepare_execute:
    dest: "{{ amster_home_version }}"
    configure: "{{ am_configure }}"
    templates: "{{ am_amster_templates }}"
    scripts: "{{ _amster_scripts }}"
    force: "{{ am_amster_force }}"

- copy:
    content: "{{ {'am_configure': am_configure }|to_nice_yaml }}"
    dest: "{{ amster_scripts_dir }}/am_configure.yml"

- name: Execute Amster script
  command: "{{ amster_exe }} {{ item }}"
  environment: "{{ am_environment }}"
  register: amster_script_exec
  args:
    chdir: "{{ amster_scripts_dir }}"
  with_items: "{{ am_configure|map(attribute='script')|list }}"
  when: >
    (not am_configure_manual|default(False)) and
    am_configure|selectattr('script', 'equalto', item)|list|map(attribute='execute')|first|default(True) and
    am_configure_enabled|default(True)
  changed_when: am_amster_stdout_tags['changed'] in amster_script_exec.stdout
  failed_when: am_amster_stdout_tags['error'] in amster_script_exec.stdout
