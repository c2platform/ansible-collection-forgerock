---
amster_version: 6.5.3
amster_home: /opt/amster
amster_home_version: "{{ amster_home }}/{{ amster_home|basename }}-{{ amster_version }}"
amster_home_link: "{{ amster_home  }}/{{ amster_home|basename }}"
amster_scripts_dir: "{{ amster_home_version }}/scripts"
amster_exe: "{{ amster_home_version }}/amster"

amster_ds_hostname: "{{ ansible_fqdn }}"
amster_ds_rootpw: supersecret
amster_amadmin_pw: supersecure # password that Amster sets amAdmin

am_java_home: "{{ java_versions[java_version]['java_home'] }}"

amster_encryptpw: C2ITMXJ1I8BSp61bmJbp4oBaOjBDC6Xi

am_configure_manual: no
am_no_log: no
am_debug: no

am_version: 6.5.3 # TODO not used
am_context: am

am_shared_secrets: /root/.am-shared-secrets
am_certificate_force: no

am_environment:
  OPENDJ_JAVA_HOME: "{{ am_java_home }}"
  JAVA_HOME: "{{ am_java_home }}"

amster_versions:
  6.5.3:
    url: file:///vagrant/downloads/Amster-6.5.3.zip
    checksum: "sha256: 933f97cabd60ac37073229729668461993c99db4f56ff7ad02eb055f66slecae8"

am_owner: tomcat
am_group: tomcat

am_amster_directories:
  - "{{ amster_home }}"
  - "{{ amster_home_version }}"
  - "{{ amster_scripts_dir }}"

am_files: []
am_directories: []
am_acl: []

am_connect:
  private-key: "{{ amster_am_install['cfgDir']|default('/opt/tomcat/am/') }}"

am_amster_scripts_default:
  - 090-connect-to-openam
  - 100-installAM_1
#  - 100-configure_AM
  - 101-connect_To_AM
  - 102-set-common-functions
#  - 112-configure-top-level-realm
#  - 201-configure-SAML
#  - 208-function_create_federation_module
#  - 209-function_load_all_saml
#  - 210-function-load-authentication-settings
#  - 400-set-global-security-settings

# Scripts called by (an)other script(s).
am_amster_subscripts:
  - 110-function-create-authentication-tree
  - 110-function-delete-authentication-tree
  - 110-function-load-authentication-service
  - 300-set-default-advanced-props
  - 400-set-global-security-settings
  - 401-set-global-locale
  - 402-update-cookie-domains

am_amster_templates:
  090-connect-to-openam:
  100-installAM_1:
  100-configure_AM:
  101-connect_To_AM:
  102-set-common-functions:
  103-configure_realm:
    vars: ['realmName', 'realmAliases']
    # Note: realmAliases is used in json body so use for example
    # realmAliases: '[\"mydomain.com\"]'
  104-create-J2EE_Agent:
    vars: ['agentName', 'agentPassword', 'igFQDN', 'igPORT', 'igPROTO', 'amFQDN', 'amURI', 'amPROTO', 'amPORT', 'realmName', 'realmFQDN', 'amCookieName']
    vars-optional:
    - name: policyClientResourceComparators
      value: serviceType=iPlanetAMWebAgentService|class=com.sun.identity.policy.plugins.HttpURLResourceName|wildcard=*|delimiter=/|caseSensitive=false
    - name: policyEvaluationApplication
      value: iPlanetAMWebAgentService
    - name: policyClientCacheMode
      value: self
    - name: amLoginUrl
      value: ""
  105-create-policy-set:
    vars: ['policySetName','realmName']
  106-create-policy:
    vars: ['policySetName', 'policyName','realmName']
  107-update-identity-store:
    vars: ['realmName', 'usersBackend', 'authPwd']
    vars-optional:
    - name: userSearchAttribute
      value: uid
    - name: userObjectclass
      value: ["organizationalPerson","top","person","inetorgperson","suwinetPerson"]
      string: no
    - name: userAttributes
      value: ["uid","givenName","objectClass","dn","cn","sn","mail","telephoneNumber","businessCategory","facsimileTelephoneNumber","description"]
      string: no
    - name: authNamingAttr
      value: uid
    - name: peopleContainerName
      value: cn
    - name: peopleContainerValue
      value:
    - name: authKbaAttr
      value: []
      string: no
    - name: authKbaIndexAttr
      value:
    - name: authKbaAttemptsAttr
      value: []
      string: no
    - name: groupContainerName
      value:
    - name: groupContainerValue
      value:
    - name: memberof
      value: isMemberOf
  108-set-sessionproperties:
    vars: ['realmName', 'sharedSecret', 'loginSuccessUrl']
    vars-optional:
    - name: keyAlias
      value: test
    - name: loginFailureUrl
      value: ""
  109-configure-ValidationService:
    vars: ['realmName']
    vars-optional:
    - name: validGotoDestinations
      value: []
      string: no
  110-create-authentication-LdapTree:
    vars: ['realmName','defaultTreeName','defaultAuthenticationService', 'primaryLDAPServer','bindUserPassword']
    vars-optional:
    - name: startDN
      value: cn=Directory Manager
    - name: dnToStartUserSearch
      value: o=suwi,c=NL
    - name: bindUserDN
      value: cn=Directory Manager
    - name: attributeUsedtoRetrieveUserProfile
      value: uid
    - name: attributeUsedtoSearchForAUserToBeAuthenticated
      value: uid
    - name: secondaryLDAPServer
      value:
    scripts:
      - 110-function-delete-authentication-tree
      - 110-function-create-authentication-tree
      # - 110-function-load-authentication-service
      # Set tree as default service
      # TODO uncomment when password reset works
  112-configure-top-level-realm:
    vars: ['newChainName','realm']
    vars-optional:
    - name: moduleType
      value: LDAP
    - name: chainCriteria
      value: REQUIRED
  113-disable-module-and-zeropage-authentication:
  114-set-session-limits:
    vars: ['realmName']
    vars-optional:
    - name: maxSessionTime
      value: 540
      string: no
    - name: maxIdleTime
      value: 45
      string: no
    - name: quotaLimit
      value: 1
      string: no
    - name: maxCachingTime
      value: 3
      string: no
  118-update-ldap-module:
    vars: ['realmName', 'primaryLdapServer', 'userSearchStartDN']
    vars-optional:
    - name: userBindDN
      value: cn=Directory Manager
    - name: moduleName
      value: LDAP
    - name: connectionMode
      value: LDAPS
    body:
      primaryLdapServer:
      - "$primaryLdapServer"
      secondaryLdapServer: []
      userSearchStartDN:
      - "$userSearchStartDN"
      userBindDN: $userBindDN
      userProfileRetrievalAttribute: uid
      userSearchAttributes:
      - uid
      searchScope: SUBTREE
      openam-auth-ldap-connection-mode: $connectionMode
      returnUserDN: false
      profileAttributeMappings: []
      minimumPasswordLength: '8'
      beheraPasswordPolicySupportEnabled: true
      trustAllServerCertificates: false
      connectionHeartbeatInterval: 10
      connectionHeartbeatTimeUnit: SECONDS
      operationTimeout: 0
      authenticationLevel: 0
  115-set-global-session-quotas:
    vars-optional:
    - name: maxSessionListSize
      value: 25000
      string: no
    - name: maxSessionTime
      value: 540
      string: no
    - name: maxIdleTime
      value: 45
      string: no
    - name: quotaLimit
      value: 10 # limit of 10 as default, so multiple amadmin sessions are possible
      string: no
    - name: maxCachingTime
      value: 3
      string: no
    - name: iplanetSessionConstraint
      value: 'ON'
    - name: denyLoginWhenRepoDown
      value: 'YES'
    - name: quotaConstraintMaxWaitTime
      value: 6000
      string: no
    - name: behaviourWhenQuotaExhausted
      value: org.forgerock.openam.session.service.DestroyAllAction
  116-configure-signing-secret:
    vars: ['sharedSecret']
  117-configure-amlbcookie:
  208-function_create_federation_module:
    vars: ['realmName']
  209-function_load_all_saml:
    vars: ['realmName', 'cotName', 'fileCot', 'dirSaml']
    vars-optional: # TODO remove
    - name: amsterVersion
      value: "{{ am_version }}"
  210-function-load-authentication-settings:
    vars: ['realmName']
    vars-optional:
    - name: ignoreProfile
      value: ignore
  500-debug-logging:
    vars: ['debuglevel']
  900-settings-with-restart:
    vars: ['cookieName', 'cookieDomains']
    vars-optional:
    - name: locale
      value: nl_NL
    scripts:
    - 300-set-default-advanced-props
    - 401-set-global-locale
    - 400-set-global-security-settings
    - 402-update-cookie-domains
    notify: restart tomcat instance # TODO

# Obsolete / not used:
#  - 111-configure-global-validation-service
#  - 112-configure-top-level-realm
#  - 201-configure-SAML
#  - 209-function_load_all_saml
#  - 210-function-load-authentication-settings
#  - 400-set-global-security-settings

am_amster_common_functions: |
  static String red(String text)    { "\u001B[31m" + text + "\u001B[39m" }
  static String green(String text)  { "\u001B[32m" + text + "\u001B[39m" }
  static String yellow(String text) { "\u001B[33m" + text + "\u001B[39m" }
  static String blue(String text)   { "\u001B[34m" + text + "\u001B[39m" }
  static String magenta(String text){ "\u001B[35m" + text + "\u001B[39m" }
  static String cyan(String text)   { "\u001B[36m" + text + "\u001B[39m" }
  static String todo(String text)   { "\u001B[7m\u001B[33m" + "TODO: " + text + "\u001B[0m" }
  static String arrayToEscapedString(Object obj)   { obj.size() == 0 ? "[]" : "[\""+obj.join("\", \"")+"\"]" }
  static boolean isNull(Object obj) { (null==obj||"null".equalsIgnoreCase(obj))}
  def resourceChange(c, n, content = false) {
    bodyBuilder = new groovy.json.JsonBuilder()
    cur_json = new groovy.json.JsonSlurper().parseText(c)
    new_json = new groovy.json.JsonSlurper().parseText(n)
    if ("${c}" == "null") { return true }
    if (content) {
      cur_json['_rev'] = ''
      new_json['_rev'] = ''
      cur_json['lastModifiedDate'] = ''
      new_json['lastModifiedDate'] = ''
      if (cur_json == new_json) {
        return false
      } else {
        return true
      }
    } else {
      try {
        if (cur_json['_rev'] == new_json['_rev']) {
            return false
        } else {
            return true
        }
      } catch(Exception e) {
        throw new Exception("resourceChange compare of revision failed!\n${cur_json}\n${new_json}")
      }
    }
  }

am_amster_stdout_tags:
  changed: "[CHANGED]"
  error: "[ERROR]"

# https://backstage.forgerock.com/knowledge/kb/article/a47894244
am_security_advisory_202104: |
  <!--<servlet-mapping>
      <servlet-name>VersionServlet</servlet-name>
      <url-pattern>/ccversion/*</url-pattern>
  </servlet-mapping>-->
