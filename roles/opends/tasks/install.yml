---
- name: Unzip config
  unarchive:
    dest: "{{ opends_home }}/{{ opends_version }}/config"
    owner: "{{ ds_owner }}"
    group: "{{ ds_group }}"
    remote_src: yes
    src: "{{ opends_home }}/downloads/{{ ds_versions[opends_version]['url']|basename }}"

# Check setup performed
- name: Stat config dir
  stat:
    path: "{{ opends_home }}/{{ opends_version }}/config"
  register: config_dir

- name: Stat opendj dir, to prevent installing twice.
# Note: should be 100% certain check, as opendj dir  is created in the Unzip step but /bak in the setup directory-server step.
  stat:
    path: "{{ opends_home }}/{{ opends_version }}/config/opendj/bak"
  register: configds_installed

- name: Setup OpenDS config # noqa 301
  command: "./setup directory-server {{ opends_setup_config|opends_cmd }}"
  become: yes
  become_user: forgerock
  args:
    chdir: "{{ opends_home }}/{{ opends_version }}/config/opendj"
  when: not configds_installed.stat.exists
  register: ds_setup_status

- name: Status # noqa 301
  command: "{{ opends_home }}/{{ opends_version }}/config/opendj/bin/status --offline"
  become: yes
  become_user: forgerock
  register: ds_status
  ignore_errors: yes

- name: Systemd DS config 2-step level
  template:
    src: dsconfig-init.j2
    dest:  "{{ opends_home }}/{{ opends_version }}/config/opendj/bin/dsconfig-init.sh" 
    owner: root
    group: root
    mode: 0755


# For explanation of the rather crazy model needed, see https://backstage.forgerock.com/knowledge/kb/article/a56766667
# We do it bottoms-up. First the init script, then the service that calls the init script, and finally the enabling

- name: Systemd DS config service
  template:
    src: dsconfig.service.j2
    dest: /etc/systemd/system/ds-config.service
    owner: root
    group: root
    mode: 0755
  notify: systemctl-daemon-reload

- name: ensure config service (running and) set to start on boot
  service:
    name: ds-config
    enabled: yes


# As during install through the setup command the service gets started, we cannot require 'started' here. Error would be "unable to start service ds-config" :-( 
# The whole two-step install
# mainly accomplishes that start-ds shell script is run upon boot. The perils of running an init.d era startup script in the syemctl Unix era.


# End of section for config DS instance



- name: Unzip User
  unarchive:
    dest: "{{ opends_home }}/{{ opends_version }}/user"
    owner: "{{ ds_owner }}"
    group: "{{ ds_group }}"
    remote_src: yes
    src: "{{ opends_home }}/downloads/{{ ds_versions[opends_version]['url']|basename }}"

# Check setup performed
- name: Stat config dir
  stat:
    path: "{{ opends_home }}/{{ opends_version }}/user"
  register: config_dir


- name: Stat opendj user dir, to prevent installing twice.
  stat:
    path: "{{ opends_home }}/{{ opends_version }}/user/opendj/bak"
  register: userds_installed

# - debug:
#   msg: "Command: {{ opends_setup_user|opends_cmd }}"

- name: Setup OpenDS
  command: "./setup directory-server {{ opends_setup_user|opends_cmd }}"
  become: yes
  become_user: forgerock
  args:
    chdir: "{{ opends_home }}/{{ opends_version }}/user/opendj"
  when: not userds_installed.stat.exists
  register: ds_setup_status

- name: Status # noqa 301
  command: "{{ opends_home }}/{{ opends_version }}/user/opendj/bin/status --offline"
  become: yes
  become_user: forgerock
  register: ds_status
  ignore_errors: yes


 

- name: DS user service two-step vehicle
  template:
    src: dsuser-init.j2
    dest:  "{{ opends_home }}/{{ opends_version }}/user/opendj/bin/dsuser-init.sh" 
    owner:
    group: root
    mode: 0755
    

- name: Systemd DS user service
  template:
    src: dsuser.service.j2
    dest: /etc/systemd/system/ds-user.service
    owner: root
    group: root
    mode: 0755
  notify: systemctl-daemon-reload



- name: ensure user service (running and) set to start on boot
  service:
    name: ds-user
    enabled: yes    
    
    






