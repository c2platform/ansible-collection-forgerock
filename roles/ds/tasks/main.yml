---
- include: install.yml

- name: Password files
  copy:
    content: "{{ item['pw'] }}"
    owner: root
    group: root
    dest: "{{ item['file'] }}"
    mode: 0400
  with_items:
    - file: "{{ ds_password_file }}"
      pw: "{{ ds_rootpw }}"
    - file: "{{ ds_replication_global_admin_password_file }}"
      pw: "{{ ds_replication_global_admin_password }}"
  loop_control:
    label: "{{ item['file'] }}"

- include: git_repos.yml
  when: ds_git_config is defined

- block:
    - include: setup.yml
    - include: cron.yml
    - include: service.yml

    - name: Wait for DS
      shell: >
        ./status {{ ds_connect|c2platform.forgerock.ds_cmd }}
      environment: "{{ ds_environment }}"
      retries: 10
      delay: 7
      args:
        chdir: "{{ ds_home_version }}/bin"
      register: result
      until: result.rc == 0
      changed_when: false

    - name: Files
      include_role:
        name: c2platform.core.files
        tasks_from: main
      vars:
        role_name: ds # role_name
        common_files: "{{ ds_files|default({}) }}"
        common_directories: "{{ ds_directories|default({}) }}"
        common_acl: "{{ ds_acl|default({}) }}"

    - include: config.yml

    - include_tasks: modify.yml
      when: ds_modify|default(False) and ds_modify_enabled|default(True)

    - include_tasks: modify_pw.yml
      when: ds_passwords|default(False)

    - name: Import using import-ldif
      include_tasks: import.yml
      with_items: "{{ ds_import }}"
      loop_control:
        label: "{{ item['ldif-url'] }}"
      when: ds_import|default(False) and ds_import_enable

    - name: Execute scripts
      include_tasks: scripts.yml
      with_items: "{{ ds_scripts }}"
      loop_control:
        loop_var: ds_script
      when: ds_scripts|default(False)

    - include: setup_replication.yml
      when: ds_replication['replication-server']['inventory_hostname']|default('whatever') == inventory_hostname and ds_replication_enable

    - include_tasks: config_component.yml
      with_items: "{{ ds_config_components_replication }}"
      when: ds_config_components_replication is defined and ds_config_enabled|default(True) and ds_replication_enable
      vars:
        use_fingerprint: "{{ component in ds_config_components_fingerprint }}"
      loop_control:
        loop_var: component
  when: ds_setup_config is defined

#- include: certificate.yml
#  when: ds_certificate is defined
